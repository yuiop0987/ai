def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("---------")

def is_winner(board, player):
    for row in board + list(zip(*board)) + [board[i][i] for i in range(3)], [board[0][0], board[1][1], board[2][2]], [board[0][2], board[1][1], board[2][0]]:
        if all(cell == player for cell in row):
            return True
    return False

def is_full(board):
    return all(cell != ' ' for row in board for cell in row)

def find_best_move(board):
    for i in range(3):
        for j in range(3):
            if board[i][j] == ' ':
                return i, j

def main():
    board = [[' ' for _ in range(3)] for _ in range(3)]

    while True:
        print_board(board)

        row, col = map(int, input("Enter your move (row and column, separated by space): ").split())
        if board[row][col] == ' ':
            board[row][col] = 'X'
        else:
            print("Invalid move. Try again.")
            continue

        if is_winner(board, 'X'):
             print_board(board)
            print("You win!")
            break
        elif is_full(board):
            print("It's a draw!")
            break

        print("Computer's move:")
        comp_row, comp_col = find_best_move(board)
        board[comp_row][comp_col] = 'O'

        if is_winner(board, 'O'):
            print_board(board)
            print("Computer wins!")
            break
        elif is_full(board):
            print("It's a draw!")
            break

if _name_ == "_main_":
    main()
